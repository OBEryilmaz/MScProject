elementGroups = {'field u', 'field v', 'field w', 'u -> u', 'u -> v', 'u -> w', ...
  'v -> u (local)', 'v -> u (global)', 'v -> w (local)', 'v -> w (global)', ...
  'w -> u', 'w -> v', 'w -> w', 'stimulus scale w', ...
  'stimulus 1', 'stimulus 2', 'noise kernel u', 'noise kernel v', 'noise kernel w'};

gui = StandardGUI(sim, [50, 50, 900, 750], 0, [0.0, 1/4, 1.0, 3/4], [3, 1], 0.06, [0.0, 0.0, 1.0, 1/4], [8, 4], ...
  elementGroups, elementGroups);

gui.addVisualization(MultiPlot({'field u', 'field u', 'shifted stimulus sum'}, {'activation', 'output', 'output'}, ...
  [1, 10, 1], 'horizontal', {'YLim', [-25, 25], 'XGrid', 'on', 'YGrid', 'on'}, ...
  {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}, {'Color', [0, 0.75, 0], 'LineWidth', 2}}, ...
  'field u', 'feature space', 'activation / input / output'), [1, 1]);
gui.addVisualization(MultiPlot({'field v', 'field v'}, {'activation', 'output'}, ...
  [1, 10], 'horizontal', {'YLim', [-25, 25], 'XGrid', 'on', 'YGrid', 'on'}, ...
  {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}}, ...
  'field v', 'feature space', 'activation / output'), [2, 1]);
gui.addVisualization(MultiPlot({'field w', 'field w', 'shifted stimulus sum w'}, {'activation', 'output', 'output'}, ...
  [1, 10, 1], 'horizontal', {'YLim', [-25, 25], 'XGrid', 'on', 'YGrid', 'on'}, ...
  {{'b', 'LineWidth', 3}, {'r', 'LineWidth', 2}, {'Color', [0, 0.75, 0], 'LineWidth', 2}}, ...
  'field w', 'feature space', 'activation / input / output'), [3, 1]);

% add controls - sliders
% resting level and noise
gui.addControl(ParameterSlider('h_u', 'field u', 'h', [-10, 0], '%0.1f', 1, 'resting level of field u'), [1, 1]);
gui.addControl(ParameterSlider('h_v', 'field v', 'h', [-20, 0], '%0.1f', 1, 'resting level of field v'), [1, 2]);
gui.addControl(ParameterSlider('h_w', 'field w', 'h', [-10, 0], '%0.1f', 1, 'resting level of field w'), [1, 3]);
gui.addControl(ParameterSlider('q_u', 'noise kernel u', 'amplitude', [0, 30], '%0.1f', 1, ...
  'noise level for field u'), [2, 1]);
gui.addControl(ParameterSlider('q_v', 'noise kernel v', 'amplitude', [0, 30], '%0.1f', 1, ...
  'noise level for field v'), [2, 2]);
gui.addControl(ParameterSlider('q_w', 'noise kernel w', 'amplitude', [0, 30], '%0.1f', 1, ...
  'noise level for field w'), [2, 3]);

% lateral interactions
gui.addControl(ParameterSlider('c_uu', 'u -> u', 'amplitude', [0, 100], '%0.1f', 1, ...
  'strength of lateral excitation in field u'), [3, 1]);
gui.addControl(ParameterSlider('c_vu', 'u -> v', 'amplitude', [0, 100], '%0.1f', 1, ...
  'strength of excitation from field u to field v'), [3, 2]);
gui.addControl(ParameterSlider('c_wu', 'u -> w', 'amplitude', [0, 100], '%0.1f', 1, ...
  'strength of excitation from field u to field w'), [3, 3]);

gui.addControl(ParameterSlider('c_uv', 'v -> u (local)', 'amplitude', [0, 100], '%0.1f', -1, ...
  'strength of local inhibition from field v to field u'), [4, 1]);
% gui.addControl(ParameterSlider('uv_gi', 'v -> u (global)', 'amplitude', [0, 1], '%0.2f', -1, ...
%   'strength of global inhibition from field v to field u'), [5, 1]);
gui.addControl(ParameterSlider('c_wv', 'v -> w (local)', 'amplitude', [0, 100], '%0.1f', -1, ...
  'strength of local inhibition from field v to field u'), [4, 3]);
% gui.addControl(ParameterSlider('wv_gi', 'v -> w (global)', 'amplitude', [0, 1], '%0.2f', -1, ...
%   'strength of global inhibition from field v to field u'), [5, 3]);

gui.addControl(ParameterSlider('c_uw', 'w -> u', 'amplitude', [0, 100], '%0.1f', 1, ...
  'strength of excitation from field w to field u'), [5, 1]);
gui.addControl(ParameterSlider('c_vw', 'w -> v', 'amplitude', [0, 100], '%0.1f', 1, ...
  'strength of excitation from field w to field v'), [5, 2]);
gui.addControl(ParameterSlider('c_ww', 'w -> w', 'amplitude', [0, 100], '%0.1f', 1, ...
  'strength of lateral excitation in field w'), [5, 3]);

% stimuli
gui.addControl(ParameterSlider('w_s1', 'stimulus 1', 'sigma', [0, 100], '%0.1f', 1, 'width of stimulus 1'), [6, 1]);
gui.addControl(ParameterSlider('p_s1', 'stimulus 1', 'position', [0, fieldSize], '%0.1f', 1, ...
  'position of stimulus 1'), [6, 2]);
gui.addControl(ParameterSlider('a_s1', 'stimulus 1', 'amplitude', [0, 50], '%0.1f', 1, ...
  'amplitude of stimulus 1'), [6, 3]);
gui.addControl(ParameterSlider('w_s2', 'stimulus 2', 'sigma', [0, 100], '%0.1f', 1, 'width of stimulus 2'), [7, 1]);
gui.addControl(ParameterSlider('p_s2', 'stimulus 2', 'position', [0, fieldSize], '%0.1f', 1, ...
  'position of stimulus 2'), [7, 2]);
gui.addControl(ParameterSlider('a_s2', 'stimulus 2', 'amplitude', [0, 50], '%0.1f', 1, ...
  'amplitude of stimulus 2'), [7, 3]);
gui.addControl(ParameterSlider('w_s3', 'stimulus 3', 'sigma', [0, 100], '%0.1f', 1, 'width of stimulus 3'), [8, 1]);
gui.addControl(ParameterSlider('p_s3', 'stimulus 3', 'position', [0, fieldSize], '%0.1f', 1, ...
  'position of stimulus 3'), [8, 2]);
gui.addControl(ParameterSlider('a_s3', 'stimulus 3', 'amplitude', [0, 50], '%0.1f', 1, ...
  'amplitude of stimulus 3'), [8, 3]);


% add buttons
gui.addControl(GlobalControlButton('Pause', gui, 'pauseSimulation', true, false, false, 'pause simulation'), [1, 4]);
gui.addControl(GlobalControlButton('Reset', gui, 'resetSimulation', true, false, true, 'reset simulation'), [2, 4]);
gui.addControl(GlobalControlButton('Parameters', gui, 'paramPanelRequest', true, false, false, 'open parameter panel'), [3, 4]);
gui.addControl(GlobalControlButton('Save', gui, 'saveParameters', true, false, true, 'save parameter settings'), [4, 4]);
gui.addControl(GlobalControlButton('Load', gui, 'loadParameters', true, false, true, 'load parameter settings'), [5, 4]);
gui.addControl(PresetSelector('Select', gui, '', ...
  {'presetThreeLayerField_3.json', 'presetThreeLayerField_36.json', ...
  'presetThreeLayerField_38.json', 'presetThreeLayerField_44.json', ...
  'presetThreeLayerField_54.json', 'presetThreeLayerField_adult.json'}, ...
  {'3', '3,6', '3,8', '4,4', '5,4', 'adult'}, ...
  'Load pre-defined parameter settings'), [6, 4], [2, 1]);
gui.addControl(GlobalControlButton('Quit', gui, 'quitSimulation', true, false, false, 'quit simulation'), [8, 4]);